services:
  mysql:
    image: mysql:8.0.33
    ports:
      - 11306:3306
    volumes:
      #호스트에 있는 디렉토리와 컨테이너에 있는 디렉토리를 연결 시켜주는 역할
      #항상 왼쪽은 호스트 오른쪽은 도커 컨테이너
      #docker-entrypoint-initdb.d 여기에 파일을 가져다 놓으면 실행될 때 알아서 실행되기 때문에 초기 스키마 생성이나 테이블 생성을 위한 파일을 여기에 가져다 놓음
      - /Users/jeonghyeonjin/Documents/Github/ecommerce-order-payment-system/src/main/resources/initdb:/docker-entrypoint-initdb.d
    command:
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
      - '--lower_case_table_names=1'
    environment:
      MYSQL_ROOT_PASSWORD: testbed
      MYSQL_DATABASE: service-labs

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      #zookeeper를 구성하는 아이디 ,이 값은 중복되면 안된다.
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
      - "19094:19094"
    environment:
      KAFKA_BROKER_ID: 1
      #카프카가 주키퍼에 커넥션하기 위한 주소를 설정; "서비스 이름: 내부포트" 로 설정한다.
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://localhost:19094
      #내부와 외부의 네트워크를 구분하기 위한 설정 또는 보안 관련 설정
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      #도커를 통해 브로커를 간의 통신을 하기 위한 네트워크
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:19094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0